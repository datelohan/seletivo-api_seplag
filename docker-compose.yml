version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        uid: 1000 # ID do usuário
        user: appuser # Nome do usuário
    container_name: seplag-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./src:/var/www
      - ./wait-for-it.sh:/wait-for-it.sh # Monte o script no container
    networks:
      - seplag-network
    depends_on:
      - db
      - minio
    environment:
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - MINIO_HOST=http://seplag-minio:9000
    command: php-fpm
 
  db:
    image: postgres:latest
    container_name: seplag-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: laravel # Nome do banco de dados a ser criado
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - seplag-network

  minio:
    image: minio/minio
    container_name: seplag-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - seplag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  
  # Serviço para criar o bucket seplag1 automaticamente
  minio-setup:
    image: minio/mc
    container_name: seplag-minio-setup
    depends_on:
      - minio
    networks:
      - seplag-network
    entrypoint: >
      /bin/sh -c "
      sleep 10 &&
      /usr/bin/mc config host add myminio http://seplag-minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      /usr/bin/mc mb myminio/seplag1 --ignore-existing &&
      echo 'Bucket criado com sucesso!' &&
      echo 'IP do MinIO:' &&
      getent hosts seplag-minio | awk '{ print $$1 }'
      "

  nginx:
    image: nginx:alpine
    container_name: seplag-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx # Adicione logs para depuração
    networks:
      - seplag-network
    depends_on:
      - app

networks:
  seplag-network:
    driver: bridge

volumes:
  postgres-data:
  minio-data:
  nginx-logs: